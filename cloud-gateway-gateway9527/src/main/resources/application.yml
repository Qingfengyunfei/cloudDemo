server:
  port: 9527
spring:
  application:
    name: cloud-gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_route  #路由的ID, 没有固定规则但要求唯一，建议配合服务名
          uri: lb://cloud-payment-service #lb://serviceName 为gateway开启动态路由时使用
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**   #断言，路径相匹配的进行路由
        - id: payment_route2
          uri: lb://cloud-payment-service
          #uri: http://localhost:8001
          predicates:
            - Path=/payment/lb/**
            - After=2021-04-20T16:36:45.023+08:00[Asia/Shanghai]
            - Cookie=username,[a-z]+   #Cookie中要带username属性并且值为任意小写字母
            - Header=X-Request-Id,\d+ #请求头要有X-Request-Id属性并且值要满足为正数的正则表达式
            - Host=**.yunfan.com
            - Method=GET,POST
            - Query=color,gree.  #查询条件带color 如果设置匹配规则，则value还需要满足正则匹配规则
        - id: ip_route    #设置只允许指定远程ip访问
          uri: http://localhost:8001
          predicates:
            - Path=/payment/feign/timeout
            - RemoteAddr=192.168.79.101
#        - id: weight_high     #断言匹配高权重
#          uri: http://localhost:8001
#          predicates:
#            - Path=/payment/feign/timeout
#            - Weight=group1,9
#        - id: weight_low
#          uri: http://localhost:8002
#          predicates:        #断言匹配低权重
#            - Path=/payment/feign/timeout
#            - Weight=group1,1
eureka:
  instance:
    hostname: gateway9527
  client:
    #表示是否将自己注册进EurekaServer 默认为true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认为true，单节点无所谓，集群必须为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:9001/eureka  单机版
      defaultZone: http://eureka9001.com:9001/eureka,http://eureka9002.com:9002/eureka #集群版
